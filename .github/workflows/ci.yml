name: CI/CD Pipeline

permissions:
  contents: read
  security-events: write
  actions: read

on:
  push:
    branches: 
      - main
      - 'feature/**'
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [24.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v5
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run type checking
      run: npm run type-check
      
    - name: Run tests
      run: npm test
      
    - name: Build package
      run: npm run build
      
    - name: Test CLI installation
      run: |
        npm pack
        npm install -g ./auth-pkce-*.tgz
        auth-pkce --version
        auth-pkce --help

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      security-events: write
      actions: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '24.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: typescript
        
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:typescript"

  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    needs: [test, security]
   # if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-node@v5
      with:
        node-version: '24.x'
        registry-url: 'https://registry.npmjs.org/'
        
    - run: npm ci
    
    - run: npm run build

    - run: npm publish --provenance --access public --tag beta
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}